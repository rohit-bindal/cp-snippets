class DSU{
    int n;
    vector<int> parent;
    vector<int> rank;

    public:
    void DSU(int value){
        n = value;
        parent.resize(n);
        rank.resize(n);

        for(int i=0; i<n; i++){
            parent[i] = i;
            rank[i] = 0;
        }
    }

    int findPar(int u){
        if(parent[u] == u) return u;

        return parent[u] = findPar(parent[u]); 
    }

    void unite(int u, int v){
        u = findPar(u);
        v = findPar(v);

        if(rank[u] < rank[v]){
            parent[u] = v;
        }
        else if(rank[v] < rank[u]){
            parent[v] = u;
        }
        else{
            parent[v] = u;
            rank[u]++;
        }
    }
};